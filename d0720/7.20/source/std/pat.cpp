#include<cstdio>
const int N = 25500;
const int M = 105000;
const int T = 30;
int xu[M],pei[M];
int key[N],fail[N],last[N],xiao[N],da[N];
int ever[T];
int sc[M];
int n,m,p;
int main()
{
	freopen("pat.in","r",stdin);
	freopen("pat.out","w",stdout);
    int i,j;
    scanf("%d%d%d",&n,&m,&p);
    for(i=1;i<=n;i++)
        scanf("%d",&xu[i]);
    for(i=1;i<=m;i++)
        scanf("%d",&key[i]);
    for(i=1;i<=m;i++)
    {
        if(ever[key[i]])
            last[i]=ever[key[i]];
        else
        {
            ever[key[i]]=i;
            for(j=key[i]-1;j>=1;j--)
            {
                if(ever[j])
                    break;
            }
            if(j>=1)
                xiao[i]=ever[j];
            for(j=key[i]+1;j<=p;j++)
            {
                if(ever[j])
                    break;
            }
            if(j<=p)
                da[i]=ever[j];
        }
    }
    for(i=2;i<=m;i++)
    {
        fail[i]=fail[i-1];
        while(fail[i])
        {
            if(last[fail[i]+1])
            {
                if(key[i]==key[i-fail[i]-1+last[fail[i]+1]])
                    break;
            }
            else
            {
                if(xiao[fail[i]+1])
                {
                    if(key[i]>key[i-fail[i]-1+xiao[fail[i]+1]])
                    {
                        if(da[fail[i]+1])
                        {
                            if(key[i]<key[i-fail[i]-1+da[fail[i]+1]])
                                break;
                        }
                        else
                            break;
                    }
                }
                else
                {
                    if(da[fail[i]+1])
                    {
                        if(key[i]<key[i-fail[i]-1+da[fail[i]+1]])
                            break;
                    }
                    else
                        break;
                }
            }
            fail[i]=fail[fail[i]];
        }
        fail[i]++;
    }
    for(i=1;i<=n;i++)
    {
        pei[i]=pei[i-1];
        while(pei[i])
        {
            if(last[pei[i]+1])
            {
                if(xu[i]==xu[i-pei[i]-1+last[pei[i]+1]])
                    break;
            }
            else
            {
                if(xiao[pei[i]+1])
                {
                    if(xu[i]>xu[i-pei[i]-1+xiao[pei[i]+1]])
                    {
                        if(da[pei[i]+1])
                        {
                            if(xu[i]<xu[i-pei[i]-1+da[pei[i]+1]])
                                break;
                        }
                        else
                            break;
                    }
                }
                else
                {
                    if(da[pei[i]+1])
                    {
                        if(xu[i]<xu[i-pei[i]-1+da[pei[i]+1]])
                            break;
                    }
                    else
                        break;
                }
            }
            pei[i]=fail[pei[i]];
        }
        pei[i]++;
        if(pei[i]==m)
        {
            sc[++sc[0]]=i-m+1;
            pei[i]=fail[pei[i]];
        }
    }
    for(i=0;i<=sc[0];i++)
        printf("%d\n",sc[i]);
    return 0;
}
